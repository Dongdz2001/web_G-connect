using App.Business.Base;
using App.Data;
using App.Data.Models.DBAll;
using AutoMapper;
using System;
using System.Linq;

namespace App.Business.Services.DBAll
{
    public class GC_CONG_VIECDTO : BaseDTO
    {
        public Guid value { get; set; }
        public string label { get; set; }

        //public Guid id { get; set; }
        public Guid? id_chuc_nang { get; set; }
        public Guid? id_cong_viec_cha { get; set; }
        public string ten_id_chuc_nang { get; set; }
        public string ten_id_cong_viec_cha { get; set; }
        public string ma_cong_viec { get; set; }
        public string ten_cong_viec { get; set; }
        public int? stt { get; set; }
        public bool? is_cong_viec_nhom { get; set; }
        public bool? is_da_code { get; set; }
        public bool? is_da_test { get; set; }
        public string noi_dung { get; set; }
        public string tham_khao { get; set; }
        public int? so_ngay_estimate { get; set; }
        //public Guid? nguoi_tao_id { get; set; }
        //public DateTime? ngay_tao { get; set; }
        //public Guid? nguoi_chinh_sua_id { get; set; }
        //public DateTime? ngay_chinh_sua { get; set; }
        public GC_CHUC_NANG GC_CONG_VIEC_id_chuc_nang { get; set; }
        public Guid? id_du_an { get; set; }
        public string ten_id_du_an { get; set; }
    }
    public class GC_CONG_VIECProfile : Profile
    {
        public GC_CONG_VIECProfile()
        {
            CreateMap<GC_CONG_VIEC, GC_CONG_VIECSelectDTO>()
                .ForMember(x => x.value, otp => otp.MapFrom(z => z.id))
                .ForMember(x => x.label, otp => otp.MapFrom(z => z.ten_cong_viec))
                .ForMember(x => x.id_du_an, otp => otp.MapFrom(y => y.GC_CONG_VIEC_id_chuc_nang != null ? y.GC_CONG_VIEC_id_chuc_nang.id_du_an : null))
                .ForMember(x => x.id_chuc_nang, otp => otp.MapFrom(y => y.id_chuc_nang))
                ;
            CreateMap<GC_CONG_VIEC, GC_CONG_VIECDTO>()
                .ForMember(x => x.value, otp => otp.MapFrom(z => z.id))
                .ForMember(x => x.label, otp => otp.MapFrom(z => z.ten_cong_viec))

                .ForMember(x => x.id_du_an, otp => otp.MapFrom(y => y.GC_CONG_VIEC_id_chuc_nang.GC_DU_AN_id_du_an.id))
                .ForMember(x => x.ten_id_du_an, otp => otp.MapFrom(y => y.GC_CONG_VIEC_id_chuc_nang.GC_DU_AN_id_du_an.ten_du_an))

                .ForMember(x => x.ten_id_chuc_nang, otp => otp.MapFrom(y => y.GC_CONG_VIEC_id_chuc_nang.ten_chuc_nang))
                .ForMember(x => x.ten_id_cong_viec_cha, otp => otp.MapFrom(y => y.GC_CONG_VIEC_id_cong_viec_cha.ten_cong_viec))
                ;
            CreateMap<GC_CONG_VIECDTO, GC_CONG_VIEC>()
                .IncludeBase<BaseDTO, BaseModel>()
                .ForMember(x => x.GC_CONG_VIEC_id_chuc_nang, otp => otp.Ignore())
                .ForMember(x => x.GC_CONG_VIEC_id_cong_viec_cha, otp => otp.Ignore());
        }
    }
    public class GC_CONG_VIECSelectDTO
    {
        public Guid value { get; set; }
        public string label { get; set; }
        public Guid id_du_an { get; set; }
        public Guid id_chuc_nang { get; set; }
    }
}

